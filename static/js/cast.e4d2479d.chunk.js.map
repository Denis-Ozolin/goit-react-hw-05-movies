{"version":3,"sources":["components/ImageNotFound/ImageNotFound.jsx","components/ActorsList/ActorsList.jsx","components/Cast/Cast.jsx"],"names":["ImageNotFound","src","DEFAULT_PHOTO","alt","style","width","height","ActorsList","actorList","baseUrl","map","actor","profile_path","name","id","Cast","useState","actors","setActors","useEffect","fetchMovieCast","then","res","cast","BASE_PHOTO_URL"],"mappings":"0NAEaA,EAAgB,kBAC3B,qBAAKC,IAAKC,IAAeC,IAAI,WAAWC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YCD9DC,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACtC,OACE,6BACGD,EAAUE,KAAI,SAAAC,GAAK,OAClB,+BACGA,EAAMC,aACL,qBAAKX,IAAG,UAAKQ,GAAL,OAAeE,EAAMC,cAAgBT,IAAKQ,EAAME,OAExD,cAAC,EAAD,IAEF,6BAAKF,EAAME,SANJF,EAAMG,UCDR,SAASC,EAAT,GAAuB,IAAPD,EAAM,EAANA,GAC7B,EAA4BE,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,qBAAU,WACRC,YAAeN,GAAIO,MAAK,SAAAC,GACtBJ,EAAUI,EAAIC,WAEf,CAACT,IAEG,mCAAGG,GAAU,cAAC,EAAD,CAAYT,UAAWS,EAAQR,QAASe","file":"static/js/cast.e4d2479d.chunk.js","sourcesContent":["import { DEFAULT_PHOTO } from 'services/apiSettings';\n\nexport const ImageNotFound = () => (\n  <img src={DEFAULT_PHOTO} alt=\"no_photo\" style={{ width: '200px', height: '300px' }} />\n);\n","import { ImageNotFound } from 'components/ImageNotFound/ImageNotFound';\n\nexport const ActorsList = ({ actorList, baseUrl }) => {\n  return (\n    <ul>\n      {actorList.map(actor => (\n        <li key={actor.id}>\n          {actor.profile_path ? (\n            <img src={`${baseUrl}${actor.profile_path}`} alt={actor.name} />\n          ) : (\n            <ImageNotFound />\n          )}\n          <h2>{actor.name}</h2>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// import { ImageNotFound } from 'components/ImageNotFound/ImageNotFound';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast, BASE_PHOTO_URL } from 'services/apiSettings';\nimport { ActorsList } from 'components/ActorsList/ActorsList';\n\nexport default function Cast({ id }) {\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCast(id).then(res => {\n      setActors(res.cast);\n    });\n  }, [id]);\n\n  return <>{actors && <ActorsList actorList={actors} baseUrl={BASE_PHOTO_URL} />}</>;\n}\n"],"sourceRoot":""}